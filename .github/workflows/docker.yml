---
name: Docker

on: push

env:
  METADATA_FILE: metadata.json
  DOCKERFILE: ./Dockerfile

jobs:
  lintCodebase:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  buildContainer:
    needs: lintCodebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Image Name
        run: |
          IMAGE_NAME=$(jq -r .image_name ${{ env.METADATA_FILE }})
          echo "${IMAGE_NAME}"
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV

      - name: Get Image Version
        run: |
          IMAGE_VERSION=$(git log --pretty=format:'%h' -n 1)
          echo "${IMAGE_VERSION}"
          echo "IMAGE_VERSION=${IMAGE_VERSION}" >> $GITHUB_ENV

      - name: Get Date
        run: |
          DATE=$(date +"%Y%m%d")
          echo "${DATE}"
          echo "DATE=${DATE}" >> $GITHUB_ENV

      - name: Get Application Version
        run: |
          APP_VERSION=$(jq -r .version ${{ env.METADATA_FILE }})
          echo "${APP_VERSION}"
          echo "APP_VERSION=${APP_VERSION}" >> $GITHUB_ENV

      - name: Bump version and push tag
        if: ${{ github.ref == 'refs/heads/main' }}
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.5
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          custom_tag: ${{ env.APP_VERSION }}-${{ env.DATE }}-${{ env.IMAGE_VERSION }}
          tag_prefix: ''

      #- name: Create a GitHub release
      #  if: ${{ github.ref == 'refs/heads/main' }}
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      #  with:
      #    tag_name: ${{ steps.tag_version.outputs.new_tag }}
      #    release_name: ${{ steps.tag_version.outputs.new_tag }}
      #    body: ${{ steps.tag_version.outputs.changelog }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create Docker Meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.APP_VERSION }}
            type=raw,value=${{ env.APP_VERSION }}-${{ env.DATE }}
            type=raw,value=${{ env.APP_VERSION }}-${{ env.DATE }}-${{ env.IMAGE_VERSION }}

      - name: Docker Build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ env.DOCKERFILE }}
          push: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/') }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            APP_VERSION=${{ env.APP_VERSION }}
